/*
 * File: app/view/email/InboxPanel.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SenchaDash.view.email.InboxPanel', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.emailinboxpanel',

    requires: [
        'SenchaDash.view.email.InboxPanelViewModel',
        'SenchaDash.view.email.InboxPanelViewController',
        'Ext.grid.View',
        'Ext.selection.CheckboxModel',
        'Ext.grid.column.Date',
        'Ext.toolbar.Paging',
        'Ext.form.field.Checkbox',
        'Ext.button.Split',
        'Ext.menu.Menu',
        'Ext.menu.Separator'
    ],

    controller: 'emailinboxpanel',
    viewModel: {
        type: 'emailinboxpanel'
    },
    cls: 'email-inbox-panel',
    itemId: 'mygridpanel3',
    header: false,
    margin:10,
    title: 'Inbox',    
    scroll: 'none',
    bind: {
        store: '{EmailInboxStore}'
    },
    viewConfig: {
        preserveScrollOnRefresh: true
    },
    selModel: {
        selType: 'checkboxmodel',
        checkOnly: true,
        showHeaderCheckbox: true
    },
    columns: [
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(value) {
                    return '<span class="fa fa-heart"></span>';
                }
                return '<span class="fa fa-heart-o"></span>';
            },
            width: 50,
            dataIndex: 'favorite',
            text: '<span class="fa fa-heart"></span>'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'from',
            text: 'From',
            flex: 1
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'title',
            text: 'Title',
            flex: 2
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(value) {
                    return '<span class="fa fa-paperclip"></span>';
                }
                return '';
            },
            dataIndex: 'has_attachments',
            text: 'Attachments'
        },
        {
            xtype: 'datecolumn',
            dataIndex: 'received_on',
            text: 'Received'
        }
    ],
    dockedItems: [
        {
            xtype: 'pagingtoolbar',
            dock: 'top',
            itemId: 'pagingToolbar',
            width: 360,
            prependButtons: true,
            bind: {
                store: '{EmailInboxStore}'
            }
        }
    ],
    listeners: {
        afterrender: 'afterInboxPanelRender',
        cellclick:'onGridCellItemClick'
    }
});