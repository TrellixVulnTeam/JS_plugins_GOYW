/*
 * File: app/view/forms/WizardContianerViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SenchaDash.view.forms.WizardContianerViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.formswizardcontianer',

    switchNextTab: function(target) {
        var tabCount = target.items.length;
        var activeTab = target.getActiveTab();
        var index = target.items.indexOf(activeTab);
        if(tabCount>index+1)
        {
            //Ext.Msg.alert('switching tap',tabCount+'<>'+index);
            target.setActiveTab(index+1);
        }
        else
        {
            return false;
        }
    },

    switchPreviousTab: function(target) {
        var tabCount = target.items.length;
        var activeTab = target.getActiveTab();
        var index = target.items.indexOf(activeTab);
        if(index-1 >= 0)
        {
            //Ext.Msg.alert('switching tap',tabCount+'<>'+index);
            target.setActiveTab(index-1);
        }
        else
        {
            return false;
        }
    },

    setValidateFlag: function(isValidate) {

    },

    getValidateFlag: function() {

    },

    updateProgressBar: function(dir) {
        var tabPanel = Ext.ComponentQuery.query('#formPanel')[0];
        var activeTab=tabPanel.getActiveTab();
        var tabIndex=tabPanel.items.indexOf(activeTab);
        var progressBar=Ext.ComponentQuery.query('#formProgressBar')[0];
        progressBar.updateProgress((tabIndex+1)* 0.25, '', true);
        if(dir == 'prev') {
            this.switchPreviousTab(tabPanel);
        } else {
            this.switchNextTab(tabPanel);
        }
    },

    onWizardFirstFormNextButtonClick: function(button, e, eOpts) {
        // Ext.Msg.alert('switching tap','');
        var wizardFirstFormAccountTabPanel = Ext.ComponentQuery.query('#wizardFirstFormAccountTabPanel')[0];
        this.switchNextTab(wizardFirstFormAccountTabPanel);
    },

    onWizardFirstFormProfilePreviousButtonClick: function(button, e, eOpts) {
        var wizardFirstFormAccountTabPanel = Ext.ComponentQuery.query('#wizardFirstFormAccountTabPanel')[0];
        this.switchPreviousTab(wizardFirstFormAccountTabPanel);
    },

    onWizardFirstFormProfileNextButtonClick: function(button, e, eOpts) {
        var wizardFirstFormAccountTabPanel = Ext.ComponentQuery.query('#wizardFirstFormAccountTabPanel')[0];
        this.switchNextTab(wizardFirstFormAccountTabPanel);
    },

    onWizardFirstFormAddressPreviousButtonClick: function(button, e, eOpts) {
        var wizardFirstFormAccountTabPanel = Ext.ComponentQuery.query('#wizardFirstFormAccountTabPanel')[0];
        this.switchPreviousTab(wizardFirstFormAccountTabPanel);
    },

    onWizardFirstFormAddressNextButtonClick: function(button, e, eOpts) {
        var wizardFirstFormAccountTabPanel = Ext.ComponentQuery.query('#wizardFirstFormAccountTabPanel')[0];
        this.switchNextTab(wizardFirstFormAccountTabPanel);
    },

    onWizardFirstFormFinishTabPreviousButtonClick: function(button, e, eOpts) {
        var wizardFirstFormAccountTabPanel = Ext.ComponentQuery.query('#wizardFirstFormAccountTabPanel')[0];
        this.switchPreviousTab(wizardFirstFormAccountTabPanel);
    },

    onPrevButtonClick: function(button, e, eOpts) {
        this.updateProgressBar('prev');
    },

    onNextButtonClick: function(button, e, eOpts) {
        this.updateProgressBar('next');
    }

});
