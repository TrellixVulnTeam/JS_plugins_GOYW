/*
 * File: app/view/widgets/GoogleMapsContainerViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SenchaDash.view.widgets.GoogleMapsContainerViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.widgetsgooglemapscontainer',
    
    onPanelAfterRenderSatellite: function(component, eOpts) {
        this.onPanelAfterRender(2, 'satellite', component, eOpts);
    },

    onPanelAfterRenderRoadmap: function(component, eOpts) {
        this.onPanelAfterRender(10, 'roadmap', component, eOpts);
    },

    onPanelAfterRender: function(zoomlevel, type, component, eOpts) {
            var location='4 Yawkey Way, Boston, MA, 02215-3409, USA';
            var mtype= {
                'satellite' : google.maps.MapTypeId.SATELLITE,
                'roadmap' : google.maps.MapTypeId.ROADMAP,
                'hybrid' : google.maps.MapTypeId.HYBRID,
                'terrain' : google.maps.MapTypeId.TERRAIN
            };
            setTimeout(function(){
                var width = Ext.getElementById("googleMap").clientWidth;
                var mapwin = Ext.create('Ext.container.Container', {
                    itemId: 'mapWin',
                    autoShow: true,
                    layout: 'fit',
                    width:width-20,
                    height:400,
                    border: false,
                    items: {
                        xtype: 'gmappanel',
                        itemId: 'gMapPanel',
                        gmapType: 'map',
                        plain: true,
                        center: {
                            geoCodeAddr: location
                        },
                        mapOptions : {
                            zoom: zoomlevel,
                            mapTypeId: mtype[type] 
                        }
                    }
                });
                component.add(mapwin);
            },0)
            
        }
});
