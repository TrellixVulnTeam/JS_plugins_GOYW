/*
 * File: app/view/util/BackupBinContainerViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SenchaDash.view.util.BackupBinContainerViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.utilbackupbincontainer',

    onGraphInfoPanelLayout: function(container, layout, eOpts) {
        this.resizeGridRows(container);
    },

    onButtonClick1: function(button, e, eOpts) {
        //  Ext.apply(Ext.form.field.VTypes, {
        //      password: function(val, field) {
        //             if (field.initialPassField) {
        //                 var pwd = field.up('form').down('#' + field.initialPassField);
        //                 return (val == pwd.getValue());
        //             }
        //             return true;
        //         },

        //         passwordText: 'Passwords do not match...'
        //     });
        // alert('hello');

        var passwordTextField = Ext.ComponentQuery.query('#passwordTextField')[0];
        var passwordRetypeTextField = Ext.ComponentQuery.query('#passwordRetypeTextField')[0];


        if(!passwordTextField.validate())
        passwordTextField.setActiveError("The password is required and can't be empty");
        if(!passwordRetypeTextField.validate())
        passwordRetypeTextField.setActiveError("The confirm password is required and can't be empty");

    },

    onFormAfterRender1: function(component, eOpts) {

        Ext.apply(Ext.form.field.VTypes, {

            password: function(val, field) {
                if (field.initialPassField) {
                    var pwd = field.up('form').down('#' + field.initialPassField);
                    return (val == pwd.getValue());
                }
                return true;
            },

            passwordText: 'Passwords do not match...'
        });

    }

});
